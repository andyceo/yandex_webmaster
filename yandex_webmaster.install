<?php
/**
 * @file
 * Install, update and uninstall functions for the Yandex.Webmaster module.
 */

/**
 * Implements hook_uninstall().
 */
function yandex_webmaster_uninstall() {
  $variables = array('yandex_webmaster_timeout', 'yandex_webmaster_cache_lifetime');

  foreach ($variables as $var_name) {
    variable_del($var_name);
  }
}

function yandex_webmaster_schema() {
  $schema = array();
  $schema['yandex_webmaster'] = array(
    'description' => 'Yandex.Webmaster service information cache.',
    'fields' => array(
      'uid' => array(
        'description' => 'Drupal user id.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'auth_code' => array(
        'description' => 'Yandex OAuth authentication code.',
        'type' => 'varchar',
        'length' => '10',
        'not null' => TRUE,
      ),
      'token' => array(
        'description' => 'Yandex OAuth token',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'Token creation date.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'expired' => array(
        'description' => 'Token expiring date.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'domain' => array(
        'description' => 'Yandex.Webmaster language domain',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'cached' => array(
        'description' => 'When host list was cached',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'unique keys' => array(
      'uid' => array('uid')
    ),
  );
  $schema['yandex_webmaster_host_list'] = array(
    'description' => 'Contain actual host list.',
    'fields' => array(
      'uid' => array(
        'description' => 'User id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'hid' => array(
        'description' => 'Host id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Host name.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'verified' => array(
        'description' => 'Flag: Is host verified?',
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
      'tcy' => array(
        'description' => 'Host TCY.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'medium',
        'not null' => FALSE,
      ),
      'loaded' => array(
        'description' => 'Host loaded pages count.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'indexed' => array(
        'description' => 'Host indexed pages count.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'last_visit' => array(
        'description' => 'Last visit timestamp',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'virused' => array(
        'description' => 'Flag: Is host virused?',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'crawling' => array(
        'description' => 'Flag: Is host crawled?',
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'resources' => array(
        'description' => 'Host resources (from service document).',
        'type' => 'blob',
        'not null' => FALSE,
      ),
    ),
    'unique keys' => array(
      'uid' => array('uid', 'hid')
    ),
  );
  return $schema;
}
